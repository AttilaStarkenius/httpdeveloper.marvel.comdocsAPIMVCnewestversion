@{
    ViewBag.Title = "Marvel API C# Wrapper";
    ViewBag.marvelDeveloper = "developer.marvel.com";
    Layout = null;
}

<!DOCTYPE html>

@using RestSharp;

@using Marvel.Api;

@using Marvel.Api.Filters;
@using Marvel.Api.Model.DomainObjects;
@using Marvel.Api.Results;
@using Marvel.Api.Model;

@using Marvel;

@{
    /*List<RestRequest> requestList =*/ /*(List<CharactersInResultViewModel>)*//*ViewBag.Message;*/

    /*List<RestResponse> responseList =*/ /*(List<RestResponse>)*//*ViewBag.Message;*/

    /*RestResponse restResponse =*/ /*(List<RestResponse>)*/

    //var items = new List<CharactersInResultViewModel>();

    //var items = ViewBag.Message;





    //items = ViewBag.Message;

}
@*<table>
        @foreach (var item in items)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Description</td>
            </tr>
        }
    </table>*@

<html>
<head>
    <link href="~/Styles/prism.css" rel="stylesheet" />
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.96.1/css/materialize.min.css">
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,300,300italic,400italic,500,500italic,700' rel='stylesheet' type='text/css'>
    <link href="~/Styles/main.css" rel="stylesheet" />
    <meta name="viewport" content="width=device-width" />
    <script type="text/javascript" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="~/Scripts/prism.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.96.1/js/materialize.min.js"></script>
    <script src="/Scripts/Index.js"></script>
    @*<element onload="getMarvelResponse">*@

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title></title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width">
    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
    <script src="C:\Users\Attila\source\repos\httpdeveloper.marvel.comdocsAPIMVCnewestversion\httpdeveloper.marvel.comdocsAPIMVCnewestversion\handlebars-v4.7.7.js"></script>
    @*<script src="handlebars-v1.3.0.js"></script>*@
    <link rel="stylesheet" href="style.css">

</head>
<body>

    <!--<script src="C:\Users\Attila\source\repos\httpdeveloper.marvel.comdocsAPIMVCnewestversion\httpdeveloper.marvel.comdocsAPIMVCnewestversion\handlebars-v4.7.7.js"></script>


    <div id="results"></div>
    <div id="status"></div>

    <script id="reportTemplate" type="text/x-handlebars-template" src="~/js/">-->
        @*@*<script src="C:\Users\Attila\source\repos\httpdeveloper.marvel.comdocsAPIMVCnewestversion\httpdeveloper.marvel.comdocsAPIMVCnewestversion\handlebars-v4.7.7.js"></script>*@<!--*@

        <h1>{{year}}</h1>
        <p>
            Average Price: ${{avgPrice}}<br />
            Low/High Price: ${{minPrice}} / ${{maxPrice}}<br />
            Average Page Count: {{avgPageCount}}<br />
        </p>
        {{#each thumbs}}
        <img src="{{this}}" class="thumb">
        {{/each}}
        <br clear="left">
        <p />


    </script>
    <script--> @*src="app.js"*@<!--></script>-->
    @*onload="myFunction();">*@
    <!--<script>-->

        @*/*try {*/



        /* global $,console,document,Handlebars */
        alert("first alert");
        //default not avail image
        var IMAGE_NOT_AVAIL = "http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available";

        alert(IMAGE_NOT_AVAIL);

        //my key
        var KEY = "1f8c669bfb6d6b86aa65400c8f3ad03d";

        alert(KEY);

        //credit: http://stackoverflow.com/a/1527820/52160



        /*window.onload =*/
        /*$(document).ready(function () {*/

        //getComicData();

        //getRandomInt();

        alert("Test if alert works");


        var $results = $("#results");
        var $status = $("#status");

        var templateSource = $("#reportTemplate").html();
        //var template = Handlebars.compile(templateSource);
        //alert(template);
        var start = 2013;
        var end = 1950;

        //alert("Test if alert works");

        var promises = [];

        alert(start.toString());

        /*alert(end);*/

        $status.html("<i>Getting comic book data - this will be slow - stand by...</i>");


        alert($status.html);

        alert($status.html.toString());

        alert(status);

        alert(status.toString());

        for (var x = start; x >= end; x--) {
            promises.push(getComicData(x));
            alert(promises);
            alert(promises.toString());
        }

        $.when.apply($, promises).done(function () {

            var args = Array.prototype.slice.call(arguments, 0);

            alert(args);

            alert(args.toString());


            $status.html("");

            for (var x = 0; x < args.length; x++) {
                var year = start - x;
                console.log("displaying year", year);

                var stats = {};
                stats.year = year;
                stats.priceTotal = 0;
                stats.priceCount = 0;
                stats.minPrice = 999999999;
                stats.maxPrice = -999999999;
                stats.pageTotal = 0;
                stats.pageCount = 0;
                stats.pics = [];

                alert(stats);

                var res = args[x][0];

                alert(res);

                if (res.code === 200) {
                    for (var i = 0; i < res.data.results.length; i++) {
                        var comic = res.data.results[i];
                        //just get the first item
                        if (comic.prices.length && comic.prices[0].price !== 0) {
                            stats.priceTotal += comic.prices[0].price;
                            if (comic.prices[0].price > stats.maxPrice) stats.maxPrice = comic.prices[0].price;
                            if (comic.prices[0].price < stats.minPrice) stats.minPrice = comic.prices[0].price;
                            stats.priceCount++;
                        }
                        if (comic.pageCount > 0) {
                            stats.pageTotal += comic.pageCount;
                            stats.pageCount++;
                        }
                        if (comic.thumbnail && comic.thumbnail.path != IMAGE_NOT_AVAIL) stats.pics.push(comic.thumbnail.path + "." + comic.thumbnail.extension);

                    }
                    stats.avgPrice = (stats.priceTotal / stats.priceCount).toFixed(2);
                    stats.avgPageCount = (stats.pageTotal / stats.pageCount).toFixed(2);

                    //pick 5 thumbnails at random
                    stats.thumbs = [];
                    while (stats.pics.length > 0 && stats.thumbs.length < 5) {
                        var chosen = getRandomInt(0, stats.pics.length);
                        stats.thumbs.push(stats.pics[chosen]);
                        stats.pics.splice(chosen, 1);
                    }

                    console.dir(stats);
                    var html = template(stats);
                    $results.append(html);
                    alert(html);
                }
            }
        });


        function getRandomInt(min, max) {
            return Math.floor(Math.random() * (max - min + 1)) + min;
            alert(max);
        }

        function getComicData(year) {
            var url = "http://gateway.marvel.com/v1/public/comics?limit=100&format=comic&formatType=comic&dateRange=" + year + "-01-01%2C" + year + "-12-31&apikey=" + KEY;
            console.log('getComicData(' + year + ')');
            alert(year);
            return $.get(url);
            alert(url);
        }*@

        /* });*/



        //}

        //catch (e) {
        //    alert(e);
        //}





        //alert(getMarvelResponse.data);
        //alert('ok');

        //alert(getMarvelResponse);

        var PRIV_KEY = "b7e37b0815b570c2f84f0267060b0637698ed06a";
        var PUBLIC_KEY = "1f8c669bfb6d6b86aa65400c8f3ad03d";

        //alert(PUBLIC_KEY);


        //        Request Url: http://gateway.marvel.com/v1/public/comics
        //        Request Method: GET
        //        Params: {
        //            "apikey": "your api key",
        //                "ts": "a timestamp",
        //                    "hash": "your hash"
        //        }
        //        Headers: {
        //            Accept: *
        //}

        const http = new XMLHttpRequest()

        http.open("GET", "http://gateway.marvel.com/v1/public/comics", true, "1f8c669bfb6d6b86aa65400c8f3ad03d")
        http.send()

        http.onload = () => console.log(http.responseText)

            //alert(http.responseText);




                                    //try {

                                    //    $(function myFunction () {
                                    //        var marvelAPI = 'https://gateway.marvel.com/v1/public/comics';
                                    //        try {
                                    //        $.getJSON(marvelAPI, {
                                    //            apikey: '1f8c669bfb6d6b86aa65400c8f3ad03d',
                                    //            alert($);
                                    //        })

                                    //            .done(function (response) {
                                    //alert($);
                                    //                alert(response);
                                    //                alert(response.data.results);
                                    //                var results = response.data.results;
                                    //                alert(results);
                                    //                var resultsLen = results.length;
                                    //                alert(results.length);
                                    //                var output = '<ul>';

                                    //                alert("right");

                                    //                for (var i = 0; i < resultsLen; i++) {
                                    //                    if (results[i].images.length > 0) {
                                    //                        var imgPath = results[i].images[0].path + '/standard_xlarge.' + results[i].images[0].extension;
                                    //                        output += '<li><img src="' + imgPath + '"><br>' + results[i].title + '</li>';
                                    //                    }
                                    //                }
                                    //                output += '</ul>'
                                    //                $('#results').append(output);
                                    //            });
                                    //        }
                                    //        catch (err) {
                                    //            /*alert("error");
                                    //            alert(err.message);
                                    //            document.getElementById("demo").innerHTML = err.message;
                                    //        }

                                    //    });

                                    //}

                                    //catch (err) {
                                    //    alert("error");
                                    //    alert(err.message);
                                    //    document.getElementById("demo").innerHTML = err.message;
                                    //}












                                        //function getMarvelResponse() {

                                        //    // you need a new ts every request
                                        //    var ts = new Date().getTime();
                                        //    var hash = CryptoJS.MD5(ts + PRIV_KEY + PUBLIC_KEY).toString();

                                        //    // the api deals a lot in ids rather than just the strings you want to use
                                        //    var characterId = '1009351'; // hulk


                                        //    var url = 'http://gateway.marvel.com:80/v1/public/comics';

                                        //    console.log(url);
                                        //    alert(url.toString);

                                        //    $.getJSON(url, {
                                        //        ts: ts,
                                        //        apikey: "1f8c669bfb6d6b86aa65400c8f3ad03d",
                                        //        hash: hash,
                                        //        characters: "1009351"
                                        //    })
                                        //        .done(function (data) {
                                        //            // sort of a long dump you will need to sort through
                                        //            console.log(data);
                                        //            alert(data.toString);
                                        //        })
                                        //        .fail(function (err) {
                                        //            // the error codes are listed on the dev site
                                        //            console.log(err);
                                        //            alert(err.toString);
                                        //        });
                                        //    alert(getMarvelResponse.data.toString);
                                        //};

                                        //getMarvelResponse();
                                        //window.onload = getMarvelResponse();

                                        //alert(getMarvelResponse.data.toString);

    </script>

    <div id="status"></div>

    <div id="reportTemplate"></div>


    <div id="results"></div>

    <p id="demo"></p>

    <h1>Marvel API</h1>
    @*<div id="results">*@
    @*<p>Just testing out the Marvel API pulling The Hulk. For more information on the API go to <a href="https://developer.marvel.com">developer.marvel.com</a></p>*@
    @*</div>*@

    <table class="col s12">
        @*@foreach (var item in items.)
            {


            }*@


        @*item.FirstOrDefault();*@



        @*items.FirstOrDefault();*@



        @*restResponse*@@*.FirstOrDefault()*@@*.Name.*@

        @*@foreach (var item in responseList)
            {*@

        @*@foreach (var item in items)
            {*@
        <tr>


            @*@foreach (var item in items)
                {*@

            @*<td>@restResponse.Content</td>
                <td>@restResponse.ContentType</td>

                <td>@restResponse.RawBytes</td>

                <td>@restResponse.Headers</td>

                <td>@restResponse.StatusDescription</td>

                <td>@restResponse.Server</td>

                <td>@restResponse.ResponseStatus</td>

                <td>@restResponse.Content.FirstOrDefault()</td>*@


            @*StoryID { get; set; }
                public int Id { get; set; }
                public string Description { get; set; }
                public string Name { get; set; }
                public string Url { get; set; }*@

            @*@foreach (var item in items)
                {

                <td>@item.StoryID</td>
                <td>@item.Id</td>

                <td>@item.Description</td>


                <td>@item.Name</td>

                <td>@item.Url</td>

                }*@


            @*<td>@item.Characters.Returned;</td>*@



            @*<td>@item.Name</td>
                <td>@item.Description</td>

                <td>@item.Characters</td>


                <td>@item.Characters.Items.</td>

                <td>@item.Characters.</td>


                <td>@item.Characters.Returned;</td>*@



            @*<td>@item.Name</td>
                <td>@item.Description</td>

                <td>@item.Characters</td>


                <td>@item.Characters.Items.</td>

                <td>@item.Characters.</td>


                <td>@item.Characters.Returned;</td>*@
            @*}*@

        </tr>
        @*}*@
    </table>
</body>
</html>
@*<title>@ViewBag.Title</title>

    <body>
        <div class="header">
            <div class="container">
                <div class="row">
                    <div class="col s12">
                        <h2 class="page-title center">@ViewBag.Title</h2>
                    </div>
                    <div class="col offset-s1 s4">
                        <a id="playground" href="#" class="waves-effect waves-light btn-large red block"><i class="fa fa-cog  fa-spin fa-2x"></i>Playground</a>
                    </div>
                    <div class="col offset-s2 s4">
                        <a href="https://github.com/rroa/marvel-csharp" target="blank" class="waves-effect waves-light btn-large red block"><i class="fa fa-github fa-2x"></i>Github</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="container">
            <div class="row">*@

@*<div class="col s12">
                <h4>Installation</h4>
                <div class="divider"></div>
                <p>Head over to <a href="http://@ViewBag.marvelDeveloper" target="_blank">@ViewBag.marvelDeveloper</a> and sign up/in to get your API keys.</p>
            </div>

            <div class="col s12">
                <h5>NuGet</h5>
                <p>
                    Use <a href="https://www.nuget.org/packages/Marvel.Api/" target="_blank">NuGet</a> to fetch and install the library for you.
                </p>
                <pre>
                <code class="language-csharp">
    PM&gt; Install-Package Marvel.Api
                    </code>
                </pre>
            </div>

            <div class="col s12">
                <h5>Quick start</h5>
                <pre>
                <code class="language-csharp">
    const string publicKey = "YOUR PUBLIC KEY";
    const string privateKey = "YOUR PRIVATE KEY";

    // Initialize the API client
    //
    var client = new MarvelRestClient(publicKey, privateKey);

    // First 20 characters
    //
    var response = client.FindCharacters();

    // Iterate through the results
    //
    foreach (var character in response.Data.Results)
    {
        // Do something with the character info
        string name = character.Name;
    }
                        </code>
                </pre>
                <p><i>For more on how to use this wrapper visit <a href="https://github.com/rroa/marvel-csharp" target="_blank">marvel-csharp</a></i> @@ Github.</p>
            </div>
            <div class="col s12">
                <h4>Documentation</h4>
                <div class="divider"></div>
                <p>The full doxygen documentation for the API can be found <a href="http://marvel.mrroa.com/static/docs/class_marvel_1_1_api_1_1_marvel_rest_client.html" target="_blank">here</a>.</p>
            </div>
        </div>
    </div>
    <footer>
        <div class="container">
            <div class="row">
                <div class="col s12">
                    <p class="center"><i>MIT License 2015</i></p>
                </div>
            </div>
        </div>
    </footer>*@
<!-- Modal Structure -->
@*<div id="playgroundModal" class="modal modal-fixed-footer">*@
@*<div class="modal-content">
    <h4>Marvel Search</h4>
    <p>
        Who you gonna call?!!
    </p>
    <div id="heroes">
        <form id="search-heroe" class="col s12">
            <div class="row">
                <div class="input-field col s12">
                    <input id="name" type="text" class="validate">
                    <label for="name">Name</label>
                    <span id="error" style="display:none; color: red"></span>
                </div>
            </div>
            <p>
                <input value="character" name="requestType" type="radio" id="character" checked />
                <label for="character">Character</label>
            </p>
            <p>
                <input disabled="disabled" value="comic" name="requestType" type="radio" id="comic" />
                <label for="comic">Comic</label>
            </p>*@
@*<div class="row">
                        <div class="input-field col s12">
                            <a id="submit" class="waves-effect waves-light btn">Search</a>
                        </div>
                    </div>
                </form>
            </div>
            <div class="progress" style="display: none !important">
                <div class="indeterminate"></div>
            </div>
        </div>
        <div class="modal-footer">
            Data provided by Marvel. © 2014 Marvel
            <a href="#" class="btn modal-action modal-close waves-effect waves-green btn-flat ">Close</a>
            <a id="backButton" class="btn waves-effect waves-light btn-flat">Back!</a>
        </div>
    </div>

    <script type="text/javascript" src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
    <script src="~/Scripts/prism.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.96.1/js/materialize.min.js"></script>
    <script src="/Scripts/Index.js"></script>

</body>*@
    